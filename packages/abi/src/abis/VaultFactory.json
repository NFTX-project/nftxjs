[
  "error CallerIsNotVault()",
  "error ChildImplementationIsNotAContract()",
  "error DepositorPremiumShareExceedsLimit()",
  "error FeeDistributorNotSet()",
  "error FeeExceedsLimit()",
  "error NFTInventoryExceeded()",
  "error NotGuardian()",
  "error Paused()",
  "error T()",
  "error VaultImplementationNotSet()",
  "error ZeroAddress()",
  "error ZeroAmountRequested()",
  "error ZeroTwapInterval()",
  "event DisableVaultFees(uint256 vaultId)",
  "event FeeExclusion(address feeExcluded, bool excluded)",
  "event Initialized(uint8 version)",
  "event NewDepositorPremiumShare(uint256 depositorPremiumShare)",
  "event NewEligibilityManager(address oldEligManager, address newEligManager)",
  "event NewFeeDistributor(address oldDistributor, address newDistributor)",
  "event NewPremiumDuration(uint256 premiumDuration)",
  "event NewPremiumMax(uint256 premiumMax)",
  "event NewTwapInterval(uint32 twapInterval)",
  "event NewVault(uint256 indexed vaultId, address vaultAddress, address assetAddress, string name, string symbol)",
  "event NewZapContract(address oldZap, address newZap)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event SetIsGuardian(address addr, bool isGuardian)",
  "event SetPaused(uint256 lockId, bool paused)",
  "event UpdateFactoryFees(uint256 mintFee, uint256 redeemFee, uint256 swapFee)",
  "event UpdateVaultFees(uint256 vaultId, uint256 mintFee, uint256 redeemFee, uint256 swapFee)",
  "event UpdatedZapContract(address zap, bool excluded)",
  "event Upgraded(address indexed beaconImplementation)",
  "function __NFTXVaultFactory_init(address vaultImpl, uint32 twapInterval_, uint256 premiumDuration_, uint256 premiumMax_, uint256 depositorPremiumShare_)",
  "function __UpgradeableBeacon__init(address beaconImplementation_)",
  "function allVaults() view returns (address[])",
  "function computeVaultAddress(address assetAddress, string name, string symbol) view returns (address)",
  "function createVault(string name, string symbol, address assetAddress, bool is1155, bool allowAllItems) returns (uint256 vaultId)",
  "function depositorPremiumShare() view returns (uint256)",
  "function disableVaultFees(uint256 vaultId)",
  "function eligibilityManager() view returns (address)",
  "function excludedFromFees(address) view returns (bool)",
  "function factoryMintFee() view returns (uint64)",
  "function factoryRedeemFee() view returns (uint64)",
  "function factorySwapFee() view returns (uint64)",
  "function feeDistributor() view returns (address)",
  "function getTwapX96(address pool) view returns (uint256 priceX96)",
  "function getVTokenPremium1155(uint256 vaultId, uint256 tokenId, uint256 amount) view returns (uint256 totalPremium, uint256[] premiums, address[] depositors)",
  "function getVTokenPremium721(uint256 vaultId, uint256 tokenId) view returns (uint256 premium, address depositor)",
  "function implementation() view returns (address)",
  "function isGuardian(address) view returns (bool)",
  "function isLocked(uint256 lockId) view returns (bool)",
  "function isPaused(uint256) view returns (bool)",
  "function numVaults() view returns (uint256)",
  "function onlyOwnerIfPaused(uint256 lockId) view",
  "function owner() view returns (address)",
  "function pause(uint256 lockId)",
  "function premiumDuration() view returns (uint256)",
  "function premiumMax() view returns (uint256)",
  "function renounceOwnership()",
  "function setDepositorPremiumShare(uint256 depositorPremiumShare_)",
  "function setEligibilityManager(address eligibilityManager_)",
  "function setFactoryFees(uint256 mintFee, uint256 redeemFee, uint256 swapFee)",
  "function setFeeDistributor(address feeDistributor_)",
  "function setFeeExclusion(address excludedAddr, bool excluded)",
  "function setIsGuardian(address addr, bool _isGuardian)",
  "function setPremiumDuration(uint256 premiumDuration_)",
  "function setPremiumMax(uint256 premiumMax_)",
  "function setTwapInterval(uint32 twapInterval_)",
  "function setVaultFees(uint256 vaultId, uint256 mintFee, uint256 redeemFee, uint256 swapFee)",
  "function transferOwnership(address newOwner)",
  "function twapInterval() view returns (uint32)",
  "function unpause(uint256 lockId)",
  "function upgradeBeaconTo(address newBeaconImplementation)",
  "function vault(uint256 vaultId) view returns (address)",
  "function vaultFees(uint256 vaultId) view returns (uint256 mintFee, uint256 redeemFee, uint256 swapFee)",
  "function vaultsForAsset(address assetAddress) view returns (address[])"
]