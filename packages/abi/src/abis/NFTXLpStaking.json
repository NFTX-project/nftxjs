[
  "event FeesReceived(uint256 vaultId, uint256 amount)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event PoolCreated(uint256 vaultId, address pool)",
  "event PoolUpdated(uint256 vaultId, address pool)",
  "event SetIsGuardian(address addr, bool isGuardian)",
  "event SetPaused(uint256 lockId, bool paused)",
  "function __NFTXLPStaking__init(address _stakingTokenProvider)",
  "function _oldRewardDistributionTokenAddr(tuple(address stakingToken, address rewardToken) pool) view returns (address)",
  "function _rewardDistributionTokenAddr(tuple(address stakingToken, address rewardToken) pool) view returns (address)",
  "function _unusedRewardDistributionTokenAddr(tuple(address stakingToken, address rewardToken) pool) view returns (address)",
  "function addPoolForVault(uint256 vaultId)",
  "function assignNewImpl()",
  "function balanceOf(uint256 vaultId, address addr) view returns (uint256)",
  "function claimMultipleRewards(uint256[] vaultIds)",
  "function claimRewards(uint256 vaultId)",
  "function deposit(uint256 vaultId, uint256 amount)",
  "function emergencyExit(address _stakingToken, address _rewardToken)",
  "function emergencyExitAndClaim(address _stakingToken, address _rewardToken)",
  "function emergencyMigrate(uint256 vaultId)",
  "function exit(uint256 vaultId)",
  "function isGuardian(address) view returns (bool)",
  "function isPaused(uint256) view returns (bool)",
  "function lockedLPBalance(uint256 vaultId, address who) view returns (uint256)",
  "function lockedUntil(uint256 vaultId, address who) view returns (uint256)",
  "function newRewardDistributionToken(uint256 vaultId) view returns (address)",
  "function newTimelockRewardDistTokenImpl() view returns (address)",
  "function nftxVaultFactory() view returns (address)",
  "function oldBalanceOf(uint256 vaultId, address addr) view returns (uint256)",
  "function oldRewardDistributionToken(uint256 vaultId) view returns (address)",
  "function onlyOwnerIfPaused(uint256 lockId) view",
  "function owner() view returns (address)",
  "function pause(uint256 lockId)",
  "function receiveRewards(uint256 vaultId, uint256 amount) returns (bool)",
  "function renounceOwnership()",
  "function rewardDistTokenImpl() view returns (address)",
  "function rewardDistributionToken(uint256 vaultId) view returns (address)",
  "function rewardDistributionTokenAddr(address stakingToken, address rewardToken) view returns (address)",
  "function setIsGuardian(address addr, bool _isGuardian)",
  "function setNFTXVaultFactory(address newFactory)",
  "function setStakingTokenProvider(address newProvider)",
  "function stakingTokenProvider() view returns (address)",
  "function timelockDepositFor(uint256 vaultId, address account, uint256 amount, uint256 timelockLength)",
  "function transferOwnership(address newOwner)",
  "function unpause(uint256 lockId)",
  "function unusedBalanceOf(uint256 vaultId, address addr) view returns (uint256)",
  "function unusedRewardDistributionToken(uint256 vaultId) view returns (address)",
  "function updatePoolForVault(uint256 vaultId)",
  "function updatePoolForVaults(uint256[] vaultIds)",
  "function vaultStakingInfo(uint256) view returns (address stakingToken, address rewardToken)",
  "function withdraw(uint256 vaultId, uint256 amount)"
]