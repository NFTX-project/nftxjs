[
  "constructor(uint256 _minExpirationTime)",
  "event NFTXEligibilityInit(bytes32 merkleRoot, string _merkleReference, string _merkleLeavesURI)",
  "event PrecursoryCheckComplete(uint256 tokenId, bytes32 requestId, bool isValid)",
  "event PrecursoryCheckStarted(uint256 tokenId, bytes32 requestId)",
  "function __NFTXEligibility_init(bytes32 _merkleRoot, string _merkleReference, string _merkleLeavesURI)",
  "function __NFTXEligibility_init_bytes(bytes configData)",
  "function afterMintHook(uint256[] tokenIds)",
  "function afterRedeemHook(uint256[] tokenIds)",
  "function beforeMintHook(uint256[] tokenIds)",
  "function beforeRedeemHook(uint256[] tokenIds)",
  "function checkAllEligible(uint256[] tokenIds) view returns (bool)",
  "function checkAllIneligible(uint256[] tokenIds) view returns (bool)",
  "function checkEligible(uint256[] tokenIds) view returns (bool[])",
  "function checkIsEligible(uint256 tokenId) view returns (bool)",
  "function finalized() view returns (bool)",
  "function merkleLeavesURI() view returns (string)",
  "function merkleReference() view returns (string)",
  "function merkleRoot() view returns (bytes32)",
  "function name() pure returns (string)",
  "function processToken(uint256 tokenId, bytes32[] merkleProof) returns (bool)",
  "function processTokens(uint256[] tokenIds, bytes32[][] merkleProofs) returns (bool[])",
  "function requiresProcessing(uint256 tokenId, bytes32[] merkleProof) view returns (bool)",
  "function targetAsset() pure returns (address)",
  "function validTokenHashes(bytes32) view returns (bool)"
]