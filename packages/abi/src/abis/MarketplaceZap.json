[
  "constructor(address nftxVaultFactory_, address universalRouter_, address PERMIT2_, address inventoryStaking_, address WETH_)",
  "error InsufficientWethForVaultFees()",
  "error NotEnoughFundsForRedeem()",
  "error NotNFTOwner()",
  "error SwapFailed()",
  "error UnableToSendETH()",
  "error WrongVaultType()",
  "error ZapPaused()",
  "error ZeroAddress()",
  "event Buy(uint256 vaultId, uint256[] nftIds, uint256 ethSpent, address to, uint256 netRoyaltyAmount)",
  "event DustReturned(uint256 ethAmount, uint256 vTokenAmount, address to)",
  "event NewDustThreshold(uint256 dustThreshold)",
  "event NewUniversalRouter(address universalRouter)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event Paused(bool status)",
  "event Sell(uint256 vaultId, uint256 count, uint256 ethReceived, address to, uint256 netRoyaltyAmount, uint256 wethFees)",
  "event Swap(uint256 vaultId, uint256[] idsIn, uint256[] idsOut, uint256 ethSpent, address to)",
  "event Swap(uint256 vaultId, uint256[] idsIn, uint256[] amounts, uint256[] idsOut, uint256 ethSpent, address to)",
  "function PERMIT2() view returns (address)",
  "function WETH() view returns (address)",
  "function buyNFTsWithERC20(tuple(address tokenIn, uint256 amountIn, uint256 vaultId, uint256[] idsOut, uint256 vTokenPremiumLimit, bytes executeToWETHCallData, bytes executeToVTokenCallData, address to, bool deductRoyalty) params)",
  "function buyNFTsWithERC20WithPermit2(tuple(address tokenIn, uint256 amountIn, uint256 vaultId, uint256[] idsOut, uint256 vTokenPremiumLimit, bytes executeToWETHCallData, bytes executeToVTokenCallData, address to, bool deductRoyalty) params, bytes encodedPermit2)",
  "function buyNFTsWithETH(uint256 vaultId, uint256[] idsOut, bytes executeCallData, address to, uint256 vTokenPremiumLimit, bool deductRoyalty) payable",
  "function dustThreshold() view returns (uint256)",
  "function inventoryStaking() view returns (address)",
  "function nftxVaultFactory() view returns (address)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onERC721Received(address, address, uint256, bytes) returns (bytes4)",
  "function owner() view returns (address)",
  "function pause(bool paused_)",
  "function paused() view returns (bool)",
  "function renounceOwnership()",
  "function sell1155(uint256 vaultId, uint256[] idsIn, uint256[] amounts, bytes executeCallData, address to, bool deductRoyalty)",
  "function sell721(uint256 vaultId, uint256[] idsIn, bytes executeCallData, address to, bool deductRoyalty)",
  "function setDustThreshold(uint256 dustThreshold_)",
  "function setUniversalRouter(address universalRouter_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function swap1155(uint256 vaultId, uint256[] idsIn, uint256[] amounts, uint256[] idsOut, uint256 vTokenPremiumLimit, address to) payable",
  "function swap721(uint256 vaultId, uint256[] idsIn, uint256[] idsOut, uint256 vTokenPremiumLimit, address to) payable",
  "function transferOwnership(address newOwner)",
  "function universalRouter() view returns (address)"
]