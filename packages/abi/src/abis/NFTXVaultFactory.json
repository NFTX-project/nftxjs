[
  "event NewEligibilityManager(address oldEligManager, address newEligManager)",
  "event NewFeeDistributor(address oldDistributor, address newDistributor)",
  "event NewVault(uint256 indexed vaultId, address vaultAddress, address assetAddress)",
  "event NewZapContract(address oldZap, address newZap)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event SetIsGuardian(address addr, bool isGuardian)",
  "event SetPaused(uint256 lockId, bool paused)",
  "event Upgraded(address indexed childImplementation)",
  "function __NFTXVaultFactory_init(address _vaultImpl, address _feeDistributor)",
  "function __UpgradeableBeacon__init(address childImplementation_)",
  "function allVaults(uint256) view returns (address)",
  "function childImplementation() view returns (address)",
  "function createVault(string name, string symbol, address _assetAddress, bool is1155, bool allowAllItems) returns (uint256)",
  "function eligibilityManager() view returns (address)",
  "function feeDistributor() view returns (address)",
  "function isGuardian(address) view returns (bool)",
  "function isLocked(uint256 lockId) view returns (bool)",
  "function isPaused(uint256) view returns (bool)",
  "function numVaults() view returns (uint256)",
  "function onlyOwnerIfPaused(uint256 lockId) view",
  "function owner() view returns (address)",
  "function pause(uint256 lockId)",
  "function renounceOwnership()",
  "function setEligibilityManager(address _eligibilityManager)",
  "function setFeeDistributor(address _feeDistributor)",
  "function setIsGuardian(address addr, bool _isGuardian)",
  "function setZapContract(address _zapContract)",
  "function transferOwnership(address newOwner)",
  "function unpause(uint256 lockId)",
  "function upgradeChildTo(address newChildImplementation)",
  "function vault(uint256) view returns (address)",
  "function vaultsForAsset(address asset) view returns (address[])",
  "function zapContract() view returns (address)"
]