[
  "event AdminChanged(address previousAdmin, address newAdmin)",
  "event BeaconUpgraded(address indexed beacon)",
  "event Upgraded(address indexed implementation)",
  "function admin() returns (address admin_)",
  "function changeAdmin(address newAdmin)",
  "function implementation() returns (address implementation_)",
  "function upgradeTo(address newImplementation)",
  "function upgradeToAndCall(address newImplementation, bytes data) payable",
  "error ApprovalToCurrentOwner()",
  "error InsufficientVTokenShares()",
  "error InsufficientVTokens()",
  "error InvalidEarlyWithdrawPenalty()",
  "error InvalidSignature()",
  "error LiquidityBelowMinimum()",
  "error NotGuardian()",
  "error NotNFTOwner()",
  "error NotPositionOwner()",
  "error ParentChildSame()",
  "error Paused()",
  "error PermitExpired()",
  "error PositionNotCreatedWithVTokens()",
  "error SenderNotFeeDistributor()",
  "error TimelockTooLong()",
  "error Timelocked()",
  "error UnableToSendETH()",
  "error Unauthorized()",
  "error VaultIdMismatch()",
  "error ZeroAddress()",
  "error ZeroVTokenShares()",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event CollectWethFees(uint256 indexed positionId, uint256 wethAmount)",
  "event CombinePositions(uint256 parentPositionId, uint256[] childPositionIds)",
  "event Deposit(uint256 indexed vaultId, uint256 indexed positionId, uint256 amount, bool forceTimelock)",
  "event DepositWithNFT(uint256 indexed vaultId, uint256 indexed positionId, uint256[] tokenIds, uint256[] amounts)",
  "event IncreasePosition(uint256 indexed vaultId, uint256 indexed positionId, uint256 amount)",
  "event Initialized(uint8 version)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event SetIsGuardian(address addr, bool isGuardian)",
  "event SetPaused(uint256 lockId, bool paused)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "event UpdateEarlyWithdrawPenalty(uint256 newEarlyWithdrawPenaltyInWei)",
  "event UpdateTimelock(uint256 newTimelock)",
  "event Withdraw(uint256 indexed positionId, uint256 vTokenShares, uint256 vTokenAmount, uint256 wethAmount)",
  "function DOMAIN_SEPARATOR() view returns (bytes32)",
  "function MINIMUM_LIQUIDITY() view returns (uint256)",
  "function PERMIT2() view returns (address)",
  "function PERMIT_TYPEHASH() view returns (bytes32)",
  "function WETH() view returns (address)",
  "function __NFTXInventoryStaking_init(uint256 timelock_, uint256 earlyWithdrawPenaltyInWei_, address timelockExcludeList_, address descriptor_)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256)",
  "function collectWethFees(uint256[] positionIds)",
  "function combinePositions(uint256 parentPositionId, uint256[] childPositionIds)",
  "function deposit(uint256 vaultId, uint256 amount, address recipient, bytes encodedPermit2, bool viaPermit2, bool forceTimelock) returns (uint256 positionId)",
  "function depositWithNFT(uint256 vaultId, uint256[] tokenIds, uint256[] amounts, address recipient) returns (uint256 positionId)",
  "function descriptor() view returns (address)",
  "function earlyWithdrawPenaltyInWei() view returns (uint256)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function increasePosition(uint256 positionId, uint256 amount, bytes encodedPermit2, bool viaPermit2, bool forceTimelock)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function isGuardian(address) view returns (bool)",
  "function isPaused(uint256) view returns (bool)",
  "function name() view returns (string)",
  "function nftxVaultFactory() view returns (address)",
  "function onERC1155BatchReceived(address, address, uint256[], uint256[], bytes) returns (bytes4)",
  "function onERC1155Received(address, address, uint256, uint256, bytes) returns (bytes4)",
  "function onlyOwnerIfPaused(uint256 lockId) view",
  "function owner() view returns (address)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function pause(uint256 lockId)",
  "function permit(address spender, uint256 tokenId, uint256 deadline, uint8 v, bytes32 r, bytes32 s) payable",
  "function positions(uint256) view returns (uint256 nonce, uint256 vaultId, uint256 timelockedUntil, uint256 timelock, uint256 vTokenTimelockedUntil, uint256 vTokenShareBalance, uint256 wethFeesPerVTokenShareSnapshotX128, uint256 wethOwed)",
  "function pricePerShareVToken(uint256 vaultId) view returns (uint256)",
  "function receiveWethRewards(uint256 vaultId, uint256 wethAmount) returns (bool rewardsDistributed)",
  "function renounceOwnership()",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes data)",
  "function setApprovalForAll(address operator, bool approved)",
  "function setDescriptor(address descriptor_)",
  "function setEarlyWithdrawPenalty(uint256 earlyWithdrawPenaltyInWei_)",
  "function setIsGuardian(address addr, bool _isGuardian)",
  "function setTimelock(uint256 timelock_)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function timelock() view returns (uint256)",
  "function timelockExcludeList() view returns (address)",
  "function tokenByIndex(uint256 index) view returns (uint256)",
  "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function totalSupply() view returns (uint256)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "function transferOwnership(address newOwner)",
  "function unpause(uint256 lockId)",
  "function vaultGlobal(uint256) view returns (uint256 totalVTokenShares, uint256 globalWethFeesPerVTokenShareX128)",
  "function wethBalance(uint256 positionId) view returns (uint256)",
  "function withdraw(uint256 positionId, uint256 vTokenShares, uint256[] nftIds, uint256 vTokenPremiumLimit) payable",
  "constructor(address _logic, address admin_, bytes _data) payable"
]